/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * WorkAreaJPanel.java
 *
 * Created on May 17, 2020, 8:35:29 AM
 */
package UserInterface.WorkAreas.StudentRole;

import Business.Business;
import Business.Course.Course;
import Business.Course.CourseOffering;
import Business.Person.AssignmentSubmission;
import Business.Person.CourseWork;
import Business.Person.Student;
import Business.Profiles.StudentProfile;
import java.awt.CardLayout;
import java.awt.List;
import java.text.SimpleDateFormat;
import static java.time.Clock.system;
import static java.time.InstantSource.system;
import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kal
 */
public class StudentCourseworkManagementJPanel extends javax.swing.JPanel {

    private javax.swing.JPanel CardSequencePanel;
    private Business business;
    private StudentProfile studentAccount;
    private Student student;
    

    /**
     * Creates new form UnitRiskWorkArea
     * @param b
     * @param spp
     * @param clp
     */

    public StudentCourseworkManagementJPanel(Business b, StudentProfile spp, JPanel clp) {

        this.business = b;
        this.CardSequencePanel = clp;
        this.studentAccount = spp;
        this.student=(Student) spp.getStudent();
        
        initComponents();
        refreshCourseID();
        
    cmbCourseID.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
        String selectedCourseId = (String) cmbCourseID.getSelectedItem();
        refreshCourseWork(selectedCourseId);
    }
});
        populateCourseTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblCourseWork = new javax.swing.JTable();
        cmbCourseID = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cmbCourseWork = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        TXTContent = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        btnSumbit = new javax.swing.JButton();

        setForeground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Course Work Management");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 14)); // NOI18N
        jLabel2.setText("Course Work");

        tblCourseWork.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Course ID", "Title", "Date", "Title 7"
            }
        ));
        jScrollPane3.setViewportView(tblCourseWork);
        if (tblCourseWork.getColumnModel().getColumnCount() > 0) {
            tblCourseWork.getColumnModel().getColumn(3).setMinWidth(0);
            tblCourseWork.getColumnModel().getColumn(3).setPreferredWidth(0);
            tblCourseWork.getColumnModel().getColumn(3).setMaxWidth(0);
        }

        jLabel4.setText("Coures Wrok:");

        jLabel5.setText("Cousre ID:");

        TXTContent.setColumns(20);
        TXTContent.setRows(5);
        jScrollPane1.setViewportView(TXTContent);

        jLabel6.setText("Content:");

        btnSumbit.setText("Sumbit");
        btnSumbit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSumbitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(14, 14, 14)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cmbCourseID, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbCourseWork, 0, 142, Short.MAX_VALUE)))
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 920, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBack)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSumbit))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(128, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(cmbCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbCourseWork, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSumbit))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnBack)
                .addGap(15, 15, 15))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.remove(this);
        CardLayout layout = (CardLayout)CardSequencePanel.getLayout();
        layout.previous(CardSequencePanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSumbitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSumbitActionPerformed
        // TODO add your handling code here:
    try {
            CourseWork cw = business.getCourseWorkDirectory().findCourseWorkByTitle((String)cmbCourseWork.getSelectedItem());
            String content = TXTContent.getText().trim();

        if (content.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "⚠️ Please fill in all fields before submitting.",
                    "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat("yyyy-MM-dd");
        String formattedDate = sdf.format(new java.util.Date());

        String result = student.submitAssignment(cw, content);

        if (!"OK".equals(result)) {
            JOptionPane.showMessageDialog(this,
                    "❌ " + result,
                    "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this,
                    "✅ Assignment submitted successfully on " + formattedDate,
                    "Success", JOptionPane.INFORMATION_MESSAGE);

            populateCourseTable();

            TXTContent.setText("");
        }

    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this,
                "❌ Error submitting assignment: " + ex.getMessage(),
                "Error", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace();
    }
    }//GEN-LAST:event_btnSumbitActionPerformed

    private void refreshCourseID() {
        cmbCourseID.removeAllItems();
        for (CourseOffering c : student.getEnrolledOfferings()) {
            cmbCourseID.addItem(c.getCourse().getCourseId());
        }
    }
    
    private void refreshCourseWork(String selectedCourseID) {
        cmbCourseWork.removeAllItems();
        
        if(selectedCourseID==null || selectedCourseID.isEmpty()){
           return; 
            
        }
        for (CourseOffering offering : student.getEnrolledOfferings()) {
            for (CourseWork cw : business.getCourseWorkDirectory().getCourseWorkDirectory()) {
                if (cw.getCourse().getCourseId().equalsIgnoreCase(selectedCourseID)) {
                    cmbCourseWork.addItem( cw.getTitle());
                }
            }
        }    
    }
    
    private boolean containsItem(JComboBox<String> comboBox, String item) {
    for (int i = 0; i < comboBox.getItemCount(); i++) {
        if (comboBox.getItemAt(i).equals(item)) {
            return true;  
        }
    }
    return false;  
}
    


    private void populateCourseTable() {
        DefaultTableModel model = (DefaultTableModel) tblCourseWork.getModel();
        model.setRowCount(0);
        SimpleDateFormat sdf =new SimpleDateFormat("yyyy-MM-dd");
        for (AssignmentSubmission a : student.getSubmissions()) {
            model.addRow(new Object[]{
                a.getCoursework().getCourse().getCourseId(),
                a.getCoursework().getTitle(),
                sdf.format(a.getSubmittedOn()),
                a
            });
        }
    }
    
    
    private void showError(String message) {
        JOptionPane.showMessageDialog(null, message, "Error", JOptionPane.ERROR_MESSAGE);
    }

    private void resetTable(){
        DefaultTableModel model = (DefaultTableModel) tblCourseWork.getModel();
        model.setRowCount(0);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea TXTContent;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSumbit;
    private javax.swing.JComboBox<String> cmbCourseID;
    private javax.swing.JComboBox<String> cmbCourseWork;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblCourseWork;
    // End of variables declaration//GEN-END:variables

}
