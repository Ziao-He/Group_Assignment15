/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package UserInterface.WorkAreas.StudentRole;

import Business.Business;
import Business.Course.CourseGrade;
import Business.Course.CourseOffering;
import Business.Person.Person;
import Business.Person.Student;
import Business.Profiles.StudentProfileDirectory;
import Business.Profiles.StudentProfile;
import Business.UserAccounts.UserAccount;
import Business.UserAccounts.UserAccountDirectory;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Yiyang Lin
 */
public class StudentFranscriptDialog extends javax.swing.JDialog {

    private Business business;
    private StudentProfile studentAccount;
    private Student student;
 
    /**
     * Creates new form StudentRegisterDialog
     */
    public StudentFranscriptDialog(java.awt.Frame parent, boolean modal,Business b,StudentProfile studentAccount) {
        super(parent, modal);
        this.business = b;
        this.studentAccount = studentAccount;
        this.student=(Student) studentAccount.getStudent();
        
        initComponents();
        refreshSemester();
        
        cmbSearchByTerm.addActionListener(new java.awt.event.ActionListener() {
            
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            String selectedTerm= (String) cmbSearchByTerm.getSelectedItem();
            if(selectedTerm != null){
                refreshTranscript(selectedTerm);
                }
            }
        });        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblUserName = new javax.swing.JLabel();
        lblStudentID = new javax.swing.JLabel();
        lblStudentID1 = new javax.swing.JLabel();
        lblTermGPA = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblOverALL = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        cmbSearchByTerm = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTranscript = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        lblTitle.setText("Transcript Review");

        lblUserName.setText("Academic Standing:");

        lblStudentID.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        lblStudentID.setText("Term:");

        lblStudentID1.setText("Tearm GPA:");

        lblTermGPA.setText("0.00");

        jLabel2.setText("Overall GPA:");

        lblOverALL.setText("0.00");

        lblStatus.setText("Unknow");

        cmbSearchByTerm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selected Semester", " ", " ", " ", " " }));

        tblTranscript.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Term", "Standing", "Course ID", "Course Name", "T", "null"
            }
        ));
        jScrollPane1.setViewportView(tblTranscript);
        if (tblTranscript.getColumnModel().getColumnCount() > 0) {
            tblTranscript.getColumnModel().getColumn(4).setMinWidth(0);
            tblTranscript.getColumnModel().getColumn(4).setPreferredWidth(0);
            tblTranscript.getColumnModel().getColumn(4).setMaxWidth(0);
            tblTranscript.getColumnModel().getColumn(5).setMinWidth(0);
            tblTranscript.getColumnModel().getColumn(5).setPreferredWidth(0);
            tblTranscript.getColumnModel().getColumn(5).setMaxWidth(0);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTitle)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbSearchByTerm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(lblStudentID1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTermGPA, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(lblOverALL, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                        .addComponent(lblUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStudentID)
                    .addComponent(cmbSearchByTerm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStudentID1)
                    .addComponent(lblTermGPA)
                    .addComponent(jLabel2)
                    .addComponent(lblOverALL)
                    .addComponent(lblUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStatus))
                .addGap(80, 80, 80))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void refreshSemester() {
        cmbSearchByTerm.removeAllItems();
        cmbSearchByTerm.addItem("Select Term");
        for (CourseOffering c : business.getCourseDirectory().getCourseOfferingList()) {
            String s = c.getSemester();
            if(!containsItem(cmbSearchByTerm,s)){
                cmbSearchByTerm.addItem(s);
            }
            }
    }
         
    private boolean containsItem(JComboBox<String> comboBox, String item) {
        for (int i = 0; i < comboBox.getItemCount(); i++) {
            if (comboBox.getItemAt(i).equals(item)) {
                 return true;  
             }
        }
        return false;  
    }
    
        private void refreshTranscript(String term) {
        try {
            DefaultTableModel model = (DefaultTableModel) tblTranscript.getModel();
            model.setRowCount(0);

            double termGPA = student.calculateTermGPA(term);
            double overallGPA = student.calculateOverallGPA();
            String standing = student.getAcademicStandingForTerm(term);

            for (CourseGrade cg : student.getTranscript()) {
                if (term.equalsIgnoreCase(cg.getTerm())) {
                    model.addRow(new Object[]{
                            cg.getTerm(),
                            standing,
                            cg.getCourse().getCourseId(),
                            cg.getCourse().getName(),
                            cg.getGrade(),
                            String.format("%.2f", termGPA),
                            String.format("%.2f", overallGPA)
                    });
                }
            }

            lblTermGPA.setText(String.format(": %.2f", termGPA));
            lblOverALL.setText(String.format(" %.2f", overallGPA));
            lblStatus.setText("Standing: " + standing);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    "❌ Error loading transcript: " + ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }
    /**
     * @param args the command line arguments
     */

    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbSearchByTerm;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblOverALL;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblStudentID;
    private javax.swing.JLabel lblStudentID1;
    private javax.swing.JLabel lblTermGPA;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JTable tblTranscript;
    // End of variables declaration//GEN-END:variables
}
