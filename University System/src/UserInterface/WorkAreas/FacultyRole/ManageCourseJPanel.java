/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.FacultyRole;

import Business.Business;
import Business.Course.CourseOffering;
import Business.UserAccounts.UserAccount;
import java.awt.CardLayout;
import java.io.File;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author yujie-liang
 */
public class ManageCourseJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageCourseJPanel
     */
    
    javax.swing.JPanel CardSequencePanel;
    Business business;
    UserAccount useraccount;
    ArrayList<CourseOffering> facultyCourse;
    CourseOffering courseOffering;

    /**
     * Creates new form UnitRiskWorkArea
     */

    public ManageCourseJPanel(Business b, JPanel clp, UserAccount ua) {

        business = b;
        this.CardSequencePanel = clp;
        useraccount = ua;
        initComponents();
        initialization();
        refresh();
        SetViewMode();
    }
    public void initialization(){
        // find which course faculty teach
        facultyCourse = business.getCourseDirectory().findByFacultyName(useraccount.getPersonId());
        
        // show the course on boxCourse
        boxCourse.removeAllItems();
        if(facultyCourse != null)
            for(CourseOffering co : facultyCourse)
                boxCourse.addItem(co.getCourse().getName());
    }
    public void refresh(){
        if(facultyCourse != null){
            String courseName = (String) boxCourse.getSelectedItem();

            for(CourseOffering co : facultyCourse)
                if(co.getCourse().getName().equals(courseName))
                    courseOffering = co;

            txtDescription.setText(courseOffering.getCourse().getDescription());
            txtSchedule.setText(courseOffering.getSchedule().getStartTime());
            txtSchedule2.setText(courseOffering.getSchedule().getEndTime());
            txtClassRoom.setText(courseOffering.getSchedule().getClassRoom());
            txtCapacity.setText(Integer.toString(courseOffering.getCapacity()));
            txtSyllabus.setText(courseOffering.getCourse().getSyllabus());
            if(courseOffering.isEnrollmentStatus())
                boxStatus.setSelectedItem("Open");
            else
                boxStatus.setSelectedItem("Close");}
        

    }
    public void SetViewMode(){
        txtDescription.setEditable(false);
        txtSchedule.setEditable(false);
        txtSchedule2.setEditable(false);
        txtClassRoom.setEditable(false);
        txtCapacity.setEditable(false);
        txtSyllabus.setEditable(false);
        
        boxStatus.setEnabled(false);
        btnUpload.setEnabled(false);
        btnSave.setEnabled(false);
        btnUpdate.setEnabled(true);
    }
    
     public void SetUpdateMode(){
        txtDescription.setEditable(true);
        txtSchedule.setEditable(true);
        txtSchedule2.setEditable(true);
        txtClassRoom.setEditable(true);
        txtCapacity.setEditable(true);
        txtSyllabus.setEditable(true);
        
        boxStatus.setEnabled(true);
        btnUpload.setEnabled(true);
        btnSave.setEnabled(true);
        btnUpdate.setEnabled(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        boxCourse = new javax.swing.JComboBox<>();
        lblDescription = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        lblSchedule = new javax.swing.JLabel();
        txtSchedule = new javax.swing.JTextField();
        lblCapacity = new javax.swing.JLabel();
        txtCapacity = new javax.swing.JTextField();
        lblSysllabus = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtSyllabus = new javax.swing.JTextArea();
        btnUpload = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();
        boxStatus = new javax.swing.JComboBox<>();
        btnUpdate = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtSchedule2 = new javax.swing.JTextField();
        lblClassRoom = new javax.swing.JLabel();
        txtClassRoom = new javax.swing.JTextField();

        setMaximumSize(new java.awt.Dimension(800, 450));
        setMinimumSize(new java.awt.Dimension(800, 450));

        lblTitle.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblTitle.setText("Course Management");

        boxCourse.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        boxCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxCourseActionPerformed(evt);
            }
        });

        lblDescription.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lblDescription.setText("Description");

        txtDescription.setColumns(20);
        txtDescription.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        txtDescription.setRows(5);
        jScrollPane1.setViewportView(txtDescription);

        lblSchedule.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lblSchedule.setText("Schedule");

        txtSchedule.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        lblCapacity.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lblCapacity.setText("Capacity");

        txtCapacity.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        lblSysllabus.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lblSysllabus.setText("Syllabus");

        txtSyllabus.setColumns(20);
        txtSyllabus.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        txtSyllabus.setRows(5);
        jScrollPane2.setViewportView(txtSyllabus);

        btnUpload.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        btnUpload.setText("Upload");
        btnUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadActionPerformed(evt);
            }
        });

        lblStatus.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lblStatus.setText("Enrollment Status");

        boxStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Open", "Close" }));

        btnUpdate.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel1.setText("to");

        txtSchedule2.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        lblClassRoom.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lblClassRoom.setText("ClassRoom");

        txtClassRoom.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(303, 303, 303)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(141, 141, 141)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblDescription)
                                    .addComponent(lblCapacity)
                                    .addComponent(lblSysllabus)
                                    .addComponent(lblStatus)
                                    .addComponent(lblSchedule)
                                    .addComponent(lblClassRoom))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                                    .addComponent(txtCapacity)
                                    .addComponent(jScrollPane2)
                                    .addComponent(boxStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtSchedule2))
                                    .addComponent(txtClassRoom)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(boxCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(lblTitle)))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpload, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitle)
                    .addComponent(boxCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDescription)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSchedule)
                    .addComponent(txtSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(txtSchedule2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtClassRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblClassRoom))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCapacity)
                    .addComponent(txtCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSysllabus)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpload))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStatus)
                    .addComponent(boxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnSave))
                .addContainerGap(264, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.remove(this);
        CardLayout layout = (CardLayout) CardSequencePanel.getLayout();
        layout.previous(CardSequencePanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void boxCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxCourseActionPerformed
        // TODO add your handling code here:
        refresh();
        SetViewMode();
    }//GEN-LAST:event_boxCourseActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        SetUpdateMode();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new FileNameExtensionFilter("Text Files (*.txt)", "txt"));

        int returnVal = fileChooser.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            
            if (file.length() == 0){
               JOptionPane.showMessageDialog(this, "empty file");
                    return;
            }
            try {
                    // Read the entire file content as a string
                    byte[] bytes = Files.readAllBytes(file.toPath());
                    String content = new String(bytes, StandardCharsets.UTF_8);

                    // Determine whether the conversion has been successful to String
                    if (content.isBlank()) {
                        JOptionPane.showMessageDialog(null, "Valid content cannot be read");
                    }else{
                    JOptionPane.showMessageDialog(this, "successfully upload file");
                    txtSyllabus.setText(content);}
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(null,
                            "Error in reading the file：" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            } 
    }//GEN-LAST:event_btnUploadActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if(facultyCourse != null){
        String description = txtDescription.getText();
        String scheduleStart = txtSchedule.getText();
        String scheduleEnd = txtSchedule2.getText();
        String classRoom = txtClassRoom.getText();
        String capacity = txtCapacity.getText();
        String syllabus = txtSyllabus.getText();
        String status = (String) boxStatus.getSelectedItem();
        
        if(description.isBlank() || scheduleStart.isBlank() || scheduleEnd.isBlank() || classRoom.isBlank() || capacity.isBlank() || syllabus.isBlank())
        {
            JOptionPane. showMessageDialog(this, "All fields are mandatory.", "Error", JOptionPane.ERROR_MESSAGE) ;
            // pause until the user closes the dialog.
            return;
        }else{
            try{
                courseOffering.getCourse().setDescription(description);
                courseOffering.getSchedule().setStartTime(scheduleStart);
                courseOffering.getSchedule().setEndTime(scheduleEnd);
                courseOffering.getSchedule().setClassRoom(classRoom);
                courseOffering.setCapacity(Integer.parseInt(capacity));
                courseOffering.getCourse().setSyllabus(syllabus);
                
                if(status.equals("Open"))
                    courseOffering.setEnrollmentStatus(true);
                else
                    courseOffering.setEnrollmentStatus(false);              
            JOptionPane.showMessageDialog(this, "Course Information successfully Update", "Information", JOptionPane.INFORMATION_MESSAGE);
            SetViewMode();
            } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "please check the capcity input.","Warning", JOptionPane.WARNING_MESSAGE);
        }
        }
        }
    }//GEN-LAST:event_btnSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxCourse;
    private javax.swing.JComboBox<String> boxStatus;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpload;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCapacity;
    private javax.swing.JLabel lblClassRoom;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblSchedule;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblSysllabus;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtCapacity;
    private javax.swing.JTextField txtClassRoom;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtSchedule;
    private javax.swing.JTextField txtSchedule2;
    private javax.swing.JTextArea txtSyllabus;
    // End of variables declaration//GEN-END:variables
}
